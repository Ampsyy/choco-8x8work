name: Build and Publish Chocolatey Package

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  release:
    name: Build and Release Choco Package
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for creating/pushing tags

      - name: Install Chocolatey CLI
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

      - name: Parse version from .nuspec
        id: version
        run: |
          [xml]$nuspec = Get-Content 8x8work.nuspec
          $version = $nuspec.package.metadata.version
          echo "Parsed version: $version"
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Create and push Git tag
        run: |
          $version = "${{ steps.version.outputs.version }}"
          $tag = "v$version"
          if (-not (git tag --list $tag)) {
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag $tag
            git push origin $tag
          } else {
            echo "Tag $tag already exists. Skipping."
          }

      - name: Pack Chocolatey package
        run: choco pack

      - name: Push to Chocolatey.org
        env:
          CHOCO_API_KEY: ${{ secrets.CHOCO_API_KEY }}
        run: |
          $pkg = Get-ChildItem *.nupkg | Where-Object { $_.Name -match "${{ steps.version.outputs.version }}" }
          choco push $pkg.FullName --source https://push.chocolatey.org/ --api-key $env:CHOCO_API_KEY

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload .nupkg to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\8x8work.${{ steps.version.outputs.version }}.nupkg
          asset_name: 8x8work.${{ steps.version.outputs.version }}.nupkg
          asset_content_type: application/octet-stream
